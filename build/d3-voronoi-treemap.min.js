!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-voronoi-map")):"function"==typeof define&&define.amd?define(["exports","d3-voronoi-map"],t):t(n.d3=n.d3||{},n.d3)}(this,function(n,t){"use strict";function e(){function n(n){e(a,n)}function e(n,i){var o;if(i.polygon=n,0!=i.height){o=t.voronoiMapSimulation(i.children).clip(n).weight(function(n){return n.value}).convergenceRatio(l).maxIterationCount(p).minWeightRatio(g).prng(d).stop();for(var r=o.state();!r.ended;)o.tick(),r=o.state();r.polygons.forEach(function(n){e(n,n.site.originalObject.data.originalData)})}}var i=.01,o=50,r=.01,u=Math.random,a=[[0,0],[0,1],[1,1],[1,0]],c=[[0,0],[1,1]],f=[1,1],l=i,p=o,g=r,d=u,h=[{weight:1},{weight:1}],s=t.voronoiMapSimulation(h).stop();return n.convergenceRatio=function(t){return arguments.length?(l=t,n):l},n.maxIterationCount=function(t){return arguments.length?(p=t,n):p},n.minWeightRatio=function(t){return arguments.length?(g=t,n):g},n.clip=function(t){return arguments.length?(s.clip(t),a=s.clip(),c=s.extent(),f=s.size(),n):a},n.extent=function(t){return arguments.length?(s.extent(t),a=s.clip(),c=s.extent(),f=s.size(),n):c},n.size=function(t){return arguments.length?(s.size(t),a=s.clip(),c=s.extent(),f=s.size(),n):f},n.prng=function(t){return arguments.length?(d=t,n):d},n}n.voronoiTreemap=e,Object.defineProperty(n,"__esModule",{value:!0})});